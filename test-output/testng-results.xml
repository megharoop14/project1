<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-05T16:52:20 IST" name="Suite" finished-at="2022-11-05T16:56:36 IST" duration-ms="255444">
    <groups>
    </groups>
    <test started-at="2022-11-05T16:52:20 IST" name="Test" finished-at="2022-11-05T16:56:36 IST" duration-ms="255444">
      <class name="scripting.Testcase3">
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripting.Testcase3@37654521]" started-at="2022-11-05T16:52:20 IST" name="openApp" finished-at="2022-11-05T16:52:34 IST" duration-ms="13661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="tc3()[pri:0, instance:scripting.Testcase3@37654521]" started-at="2022-11-05T16:52:34 IST" name="tc3" finished-at="2022-11-05T16:53:09 IST" duration-ms="35080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc3 -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripting.Testcase3@37654521]" started-at="2022-11-05T16:53:09 IST" name="closeApp" finished-at="2022-11-05T16:53:11 IST" duration-ms="1278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc3 status=SUCCESS method=Testcase3.tc3()[pri:0, instance:scripting.Testcase3@37654521] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripting.Testcase3 -->
      <class name="scripting.Testcase1">
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripting.Testcase1@7205765b]" started-at="2022-11-05T16:53:11 IST" name="openApp" finished-at="2022-11-05T16:53:25 IST" duration-ms="14792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="tc1()[pri:0, instance:scripting.Testcase1@7205765b]" started-at="2022-11-05T16:53:25 IST" name="tc1" finished-at="2022-11-05T16:53:47 IST" duration-ms="22170" status="FAIL">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=106.0.5249.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NALI7GO', ip: '192.168.18.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.121, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\lenovo\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64365}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c5a9bc8aaddcc047f1f0ecb4f6f171a3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=106.0.5249.121)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NALI7GO', ip: '192.168.18.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.121, chrome: {chromedriverVersion: 106.0.5249.61 (511755355844..., userDataDir: C:\Users\lenovo\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:64365}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c5a9bc8aaddcc047f1f0ecb4f6f171a3
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:932)
at genericLib.WebDriverUtilies.alertpopup(WebDriverUtilies.java:47)
at scripting.Testcase1.tc1(Testcase1.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc1 -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripting.Testcase1@7205765b]" started-at="2022-11-05T16:53:47 IST" name="closeApp" finished-at="2022-11-05T16:53:56 IST" duration-ms="8171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc1 status=FAILURE method=Testcase1.tc1()[pri:0, instance:scripting.Testcase1@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripting.Testcase1 -->
      <class name="scripting.Testcase2">
        <test-method is-config="true" signature="openApp()[pri:0, instance:scripting.Testcase2@47987356]" started-at="2022-11-05T16:53:56 IST" name="openApp" finished-at="2022-11-05T16:54:23 IST" duration-ms="27415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="tc2()[pri:0, instance:scripting.Testcase2@47987356]" started-at="2022-11-05T16:54:23 IST" name="tc2" finished-at="2022-11-05T16:56:35 IST" duration-ms="132024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc2 -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:scripting.Testcase2@47987356]" started-at="2022-11-05T16:56:35 IST" name="closeApp" finished-at="2022-11-05T16:56:36 IST" duration-ms="755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=tc2 status=SUCCESS method=Testcase2.tc2()[pri:0, instance:scripting.Testcase2@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- scripting.Testcase2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
